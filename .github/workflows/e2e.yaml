name: Canary integration tests
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

defaults:
  run:
    # reference: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#using-a-specific-shell
    shell: bash --noprofile --norc -eo pipefail -x {0}

# cancel the in-progress workflow when PR is refreshed.
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  e2e:
    runs-on: ubuntu-18.04
    if: "!contains(github.event.pull_request.labels.*.name, 'skip-ci')"
    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: install deps
      run: |
        ./hack/ci-helper.sh install_deps

    - name: setup cluster resources and build
      uses: ./.github/workflows/setup
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: deploy edge gateway
      run: |
        export IMG=controller:alpha
        make install
        make deploy
        kubectl create ns edge
        kubectl -n edge create -f config/samples/object_v1alpha1_objectstore_mainsite.yaml

    - name: wait for edge rgw to be ready
      run: |
        ./hack/ci-helper.sh wait_for_rgw edge

    - name: create a new gateway on core
      run: |
        kubectl create ns core
        kubectl -n core create -f config/samples/object_v1alpha1_objectstore.yaml

    - name: wait for core rgw to be ready
      run: |
        ./hack/ci-helper.sh wait_for_rgw core

    - name: print op and cr status
      run: |
        kubectl -n rook-s3-nano-system get all -o wide
        kubectl -n edge get all -o yaml
        kubectl -n core get all -o yaml

    - name: copy realm token from edge to core
      run: |
        kubectl -n edge get secret object-store-realm-token -o yaml > edge-object-store-realm-token.yaml
        yq delete --inplace edge-object-store-realm-token.yaml metadata.ownerReferences
        yq write --inplace edge-object-store-realm-token.yaml metadata.namespace core
        yq write --inplace edge-object-store-realm-token.yaml metadata.name edge-object-store-realm-token
        kubectl create -f edge-object-store-realm-token.yaml

    - name: add edge realm token to core CR spec
      run: |
        kubectl -n core patch objectstores.object.rook-s3-nano objectstore-sample --type merge -p '{"spec":{"multisite":{"realmTokenSecretName": "edge-object-store-realm-token"}}}'

    - name: run s3 operations on edge
      run: |
        ./hack/ci-helper.sh run_s3_ops edge write

    - name: verify data from edge have been synced to core
      run: |
        # TODO: remove the sleep once we wait for CR status
        sleep 30
        ./hack/ci-helper.sh run_s3_ops core read

    - name: set up tmate session for debugging
      if: failure()
      uses: mxschmitt/action-tmate@v3
